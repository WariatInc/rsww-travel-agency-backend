version: '3.8'

services:
  rabbitmq:
    container_name: rabbitmq
    restart: always
    image: jkoniusz/rabbitmq-custom-image:rsww
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq_admin
      RABBITMQ_DEFAULT_PASS: rabbitmq
    hostname: rabbitmq
    networks:
      - rsww_backend_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 5s
      retries: 5
      timeout: 10s


  pg_db:
    container_name: pg_db
    image: postgres:13
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rsww_backend_network

  mongo_db:
    container_name: mongo_db
    image: mongo:4.4.9
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb_admin
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    ports:
      - "27017:27017"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rsww_backend_network

  payment_api:
    container_name: payment_api
    restart: always
    image: jkoniusz/payment-service:rsww
    command: flask run --host 0.0.0.0 --port 8030
    environment:
      FLASK_DEBUG: 'true'
      FLASK_APP: app_wsgi.py
      NO_WSGI: 'true'
      PG_USER: payment
      PG_PASSWORD: payment
      PG_DB: payment_pg
      PG_HOST: pg_db
      PG_PORT: 5432
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: payment_user
      RABBITMQ_PASSWORD: password
    ports:
      - "8030:8030"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rsww_backend_network

  reservation_api:
    container_name: reservation_api
    restart: always
    image: jkoniusz/reservation-service:rsww
    command: flask run --host 0.0.0.0 --port 8000
    environment:
      FLASK_DEBUG: 'true'
      FLASK_APP: app_wsgi.py
      NO_WSGI: 'true'
      PG_USER: reservation
      PG_PASSWORD: reservation
      PG_DB: reservation_pg
      PG_HOST: pg_db
      PG_PORT: 5432
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: reservation_user
      RABBITMQ_PASSWORD: password
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rsww_backend_network

  tour_operator:
    container_name: tour_operator_app
    restart: always
    image: jkoniusz/tour-operator-service:rsww
    command: python3 main.py
    environment:
      FLASK_DEBUG: 'true'
      FLASK_APP: app_wsgi.py
      NO_WSGI: 'true'
      PG_USER: tour_operator
      PG_PASSWORD: tour_operator
      PG_DB: tour_operator_pg
      PG_HOST: pg_db
      PG_PORT: 5432
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: tour_operator_user
      RABBITMQ_PASSWORD: password
    ports:
      - "8020:8020"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rsww_backend_network

  trip_offer_api:
    container_name: trip_offer_api
    restart: always
    image: jkoniusz/trip-offer-service:rsww
    command: flask run --host 0.0.0.0 --port 8010
    environment:
      FLASK_DEBUG: 'true'
      FLASK_APP: app_wsgi.py
      NO_WSGI: 'true'
      MONGO_USER: trip_offer
      MONGO_PASSWORD: trip_offer
      MONGO_DB: trip_offer_mongo
      MONGO_HOST: mongo_db
      MONGO_PORT: 27017
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: rabbitmq_admin
      RABBITMQ_PASSWORD: rabbitmq
    ports:
      - "8010:8010"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rsww_backend_network

networks:
  rsww_backend_network:
    name: rsww_backend_network
    driver: bridge


  # trip_offer_api:
  #   container_name: trip_offer_api
  #   restart: always
  #   image: jkoniusz/trip-offer-service:rsww                # my pushed image
  #   command: flask run --host 0.0.0.0 --port 8010
  #   environment:
  #     FLASK_DEBUG: 'true'
  #     FLASK_APP: app_wsgi.py
  #     NO_WSGI: 'true'
  #     MONGO_USER: trip_offer
  #     MONGO_PASSWORD: trip_offer
  #     MONGO_DB: trip_offer_mongo
  #     MONGO_HOST: mongo_db
  #     MONGO_PORT: 27017
  #     RABBITMQ_HOST: rabbitmq
  #     RABBITMQ_PORT: 5672
  #     RABBITMQ_USER: rabbitmq_admin
  #     RABBITMQ_PASSWORD: rabbitmq
  #   ports:
  #     - "8010:8010"
  #   networks:
  #     - rsww_backend_network