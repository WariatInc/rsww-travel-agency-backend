version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq_admin
      RABBITMQ_DEFAULT_PASS: rabbitmq
    hostname: rabbitmq
    networks:
      - rsww_backend_network

  pg_db:
    image: postgres:14.7-alpine
    container_name: pg_db
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    networks:
      - rsww_backend_network

  api_gateway:
    container_name: api_gateway
    restart: always
    build:
      context: api_gateway
    command: flask run --host 0.0.0.0 --port 8040
    volumes:
      - ./api_gateway/src:/opt/api_gateway/src:z
      - ./api_gateway/migrations:/opt/api_gateway/migrations:z
      - ./api_gateway/db:/opt/api_gateway/db:z
    env_file:
      - api_gateway/.env.dev
    ports:
      - "8040:8040"
    networks:
      - rsww_backend_network

  mongo_db:
    image: mongo:6.0.5
    container_name: mongo_db
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb_admin
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    ports:
      - "27017:27017"
    networks:
      - rsww_backend_network

  reservation_api:
    container_name: reservation_api
    restart: always
    build:
      context: reservation_service
    command: flask run --host 0.0.0.0 --port 8000
    volumes:
      - ./reservation_service/src:/opt/reservation_service/src:z
      - ./reservation_service/migrations:/opt/reservation_service/migrations:z
      - ./reservation_service/db:/opt/reservation_service/db:z
    env_file:
      - reservation_service/.env.dev
    ports:
      - "8000:8000"
    networks:
      - rsww_backend_network

  payment_api:
    container_name: payment_api
    restart: always
    build:
      context: payment_service
    command: flask run --host 0.0.0.0 --port 8030
    volumes:
      - ./payment_service/src:/opt/payment_service/src:z
      - ./payment_service/migrations:/opt/payment_service/migrations:z
      - ./payment_service/db:/opt/payment_service/db:z
    env_file:
      - payment_service/.env.dev
    ports:
      - "8030:8030"
    networks:
      - rsww_backend_network

  trip_offer_api:
    container_name: trip_offer_api
    restart: always
    build:
      context: trip_offer_service
    command: flask run --host 0.0.0.0 --port 8010
    volumes:
      - ./trip_offer_service/src:/opt/trip_offer_service/src:z
      - ./trip_offer_service/db:/opt/trip_offer_service/db:z
    env_file:
      - trip_offer_service/.env.dev
    ports:
      - "8010:8010"
    networks:
      - rsww_backend_network
    
  tour_operator:
    restart: always
    build:
      context: tour_operator_service
    command: python3 main.py
    volumes:
      - ./tour_operator_service/src:/opt/tour_operator/src:z
      - ./tour_operator_service/db:/opt/tour_operator/db:z
      - ./tour_operator_service/migrations:/opt/tour_operator/migrations:z
    env_file:
      - tour_operator_service/.env.dev
    ports:
      - "8020:8020"
    networks:
      - rsww_backend_network

networks:
  rsww_backend_network:
    name: rsww_backend_network
    driver: bridge
